// Node module for working with a request to an API or other fellow-server
const sqlite3 = require('sqlite3').verbose();
var APIrequest = require('request');
let db = new sqlite3.Database('./PhotoQ.db');

function loadImageList () {
    var fs = require('fs');
    var data = fs.readFileSync('photoList.json');
    
    if (! data) {
        console.log("cannot read the .json");
    } else {
        listObj = JSON.parse(data);
        imgList = listObj.photoURLs;
        console.log(imgList[0], imgList[1]);
        callback();
    }
}


function annotateImage(){
    // An object containing the data the CCV API wants
    // Will get stringified and put into the body of an HTTP request, below
    APIrequestObject = {
        "requests": [
            {
                "image": {
                    "source": {"imageUri": encodeURI("http://lotus.idav.ucdavis.edu/public/ecs162/UNESCO/Ecuador SanguayNationalPark.JPG")}
                },
                "features": [{ "type": "LABEL_DETECTION" },{ "type": "LANDMARK_DETECTION"} ]
            }
        ]
    }
    

    // URL containing the API key 
    // You'll have to fill in the one you got from Google
    url = 'https://vision.googleapis.com/v1/images:annotate?key=AIzaSyDqlXnBXLZ3TB7LhsPJv7KJaokWZF9nxPY';
    
    fileNameURL = APIrequestObject.requests[0].image.source.imageUri;
    console.log("fileNameURL:");
    console.log(fileNameURL);
    
    fileNameArray = fileNameURL.split('/');
    
    fileName = fileNameArray[fileNameArray.length - 1];
    
    fileName = decodeURIComponent(fileName);

    console.log("FileName:")
    console.log(fileName)

    // Previous function annotate() starting point 
    // The code that makes a request to the API
	// Uses the Node request module, which packs up and sends off 
	// an HTTP message containing the request to the API server
	APIrequest(
	    { // HTTP header stuff
		    url: url,
		    method: "POST",
		    headers: {"content-type": "application/json"},
		    // will turn the given object into JSON
		    json: APIrequestObject
	    },
	    // callback function for API request
	    APIcallback
	);


	// callback function, called when data is received from API
	function APIcallback(err, APIresponse, body) {
    	if ((err) || (APIresponse.statusCode != 200)) {
		    console.log("Got API error");
		    console.log(body);
    	} else {
		    //add the new data to the database here using SQL UPDATE
		    APIresponseJSON = body.responses[0];
		    console.log(APIresponseJSON);
		    console.log("APIresponseJSON.labelAnnotations: ");
		    //console.log(APIresponseJSON.labelAnnotations);
		    //console.log(APIresponseJSON.landmarkAnnotations);
		    //console.log(APIresponseJSON.labelAnnotations.length)
		    var max = APIresponseJSON.labelAnnotations.length < 6 ? APIresponseJSON.labelAnnotations.length : 6;
            var tagList = []
            for(var i = 0; i < max; i++){
                tagList.push(APIresponseJSON.labelAnnotations[i].description);
			    console.log(APIresponseJSON.labelAnnotations[i].description);
            }

            var cmd = "UPDATE photoTags SET csvtags='"+tagList+"' WHERE fileName=\""+fileName+"\"";
            db.run(cmd)    
		    //var cmd = "UPDATE photoTags SET csvtags='Alfred Schmidt', City='Frankfurt' WHERE CustomerID=1;"
		    //console.log(APIresponseJSON.landmarkAnnotations[0].locations);
	    }		
    } // end callback function
} // end annotateImage

// Do it! 
annotateImage();
